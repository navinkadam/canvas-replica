{"ast":null,"code":"export var loading = \"loading\";\nexport var getFont = \"getFont\";\nexport function getFontsList() {\n  var fonts = [\"arial\", \"optima\", \"hoefler text\", \"plaster\", \"engagement\", \"VT323\", \"Helvetica Neue\", \"myriad pro\", \"comic sans ms\", \"delicious\", \"verdana\", \"georgia\", \"courier\", \"impact\", \"monaco\"];\n  return function (dispatch) {\n    dispatch({\n      type: loading,\n      payload: []\n    });\n    setTimeout(function () {\n      dispatch({\n        type: getFont,\n        payload: fonts\n      }, 6000);\n    });\n  };\n}","map":{"version":3,"sources":["/home/admin1/Documents/parct/fabric_pract/src/actions/FetchFontFamily/FetchFontFamily.jsx"],"names":["loading","getFont","getFontsList","fonts","dispatch","type","payload","setTimeout"],"mappings":"AAAA,OAAO,IAAIA,OAAO,GAAG,SAAd;AACP,OAAO,IAAIC,OAAO,GAAG,SAAd;AACP,OAAO,SAASC,YAAT,GAAwB;AAC7B,MAAIC,KAAK,GAAG,CACV,OADU,EAEV,QAFU,EAGV,cAHU,EAIV,SAJU,EAKV,YALU,EAMV,OANU,EAOV,gBAPU,EAQV,YARU,EASV,eATU,EAUV,WAVU,EAWV,SAXU,EAYV,SAZU,EAaV,SAbU,EAcV,QAdU,EAeV,QAfU,CAAZ;AAiBA,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,OAAR;AAAiBM,MAAAA,OAAO,EAAE;AAA1B,KAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,YAAM;AACfH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,OAAR;AAAiBK,QAAAA,OAAO,EAAEH;AAA1B,OAAD,EAAoC,IAApC,CAAR;AACD,KAFS,CAAV;AAGD,GALD;AAMD","sourcesContent":["export let loading = \"loading\";\nexport let getFont = \"getFont\";\nexport function getFontsList() {\n  let fonts = [\n    \"arial\",\n    \"optima\",\n    \"hoefler text\",\n    \"plaster\",\n    \"engagement\",\n    \"VT323\",\n    \"Helvetica Neue\",\n    \"myriad pro\",\n    \"comic sans ms\",\n    \"delicious\",\n    \"verdana\",\n    \"georgia\",\n    \"courier\",\n    \"impact\",\n    \"monaco\"\n  ];\n  return dispatch => {\n    dispatch({ type: loading, payload: [] });\n    setTimeout(() => {\n      dispatch({ type: getFont, payload: fonts }, 6000);\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}