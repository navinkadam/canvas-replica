{"ast":null,"code":"import _classCallCheck from \"/home/admin1/Documents/parct/fabric_pract/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/admin1/Documents/parct/fabric_pract/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/admin1/Documents/parct/fabric_pract/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/admin1/Documents/parct/fabric_pract/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/admin1/Documents/parct/fabric_pract/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/admin1/Documents/parct/fabric_pract/src/Component/DragDrop/DragDrop.jsx\";\nimport \"./DragDrop.css\";\nimport { fabric } from \"fabric\";\nimport React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getImageSrc } from \"../../actions/FetchImages/FetchImage\";\nimport { getFontsList } from \"../../actions/FetchFontFamily/FetchFontFamily\";\nimport { DrawText, Images, FontFamily, Input, TextAlign, Download, Group, Ungroup, MultipleSelection, Backward, Forward, RangeBarReact, ButtonReact, CopyPaste } from \"../Import/ImportModules\";\nfabric.Object.prototype.set({\n  borderColor: \"#53c5bf\",\n  cornerColor: \"#acdab5b8\",\n  cornerSize: 10,\n  padding: 1,\n  hasBorders: true,\n  rotatingPointOffset: 20,\n  cornerStyle: \"circle\" // transparentCorners: true\n\n});\n\nvar DragDrop =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DragDrop, _PureComponent);\n\n  function DragDrop(props) {\n    var _this;\n\n    _classCallCheck(this, DragDrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DragDrop).call(this, props));\n    _this.state = {\n      canvas: \"\",\n      cloneObject: \"\",\n      imgSrc: [],\n      fontFamilys: [],\n      selectedColor: \"#000000\",\n      selectedBackGroundColor: \"#77a05f\",\n      selectedFontFamily: \"Helvetica Neue\",\n      fontSize: 30,\n      copyPasteVisibility: false,\n      textVisibility: false,\n      selectedTextAlign: \"\",\n      textAligns: [\"left\", \"right\", \"center\", \"justify\"]\n    };\n\n    _this.drawImage = function (event) {\n      event.e.preventDefault();\n      var src = event.e.dataTransfer.getData(\"imageSrc\");\n      event.e.dataTransfer.setData(\"imageSrc\", \"hello\");\n      fabric.Image.fromURL(src, function (img) {\n        img.set({\n          left: 10,\n          top: 0 // border: \"#000\",\n          // stroke: \"#F0F0F0\",\n          // strokeWidth: 5\n\n        });\n        img.scaleToHeight(500);\n        img.scaleToWidth(500);\n\n        _this.state.canvas.setActiveObject(img);\n\n        _this.state.canvas.add(img).renderAll();\n      });\n    };\n\n    _this.onChangeFontFamily = function (e) {\n      if (_this.state.canvas.getActiveObject()) {\n        _this.setState({\n          selectedFontFamily: e.target.value\n        });\n\n        _this.state.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\n\n        _this.state.canvas.renderAll();\n      } else {\n        return alert(\"select Text\");\n      }\n    };\n\n    _this.onChangeTextAlign = function (e) {\n      if (_this.state.canvas.getActiveObject()) {\n        _this.setState({\n          selectedTextAlign: e.target.value\n        });\n\n        _this.state.canvas.getActiveObject().set(\"textAlign\", e.target.value);\n\n        _this.state.canvas.renderAll();\n      } else {\n        return alert(\"select Text\");\n      }\n    };\n\n    _this.onRemoveElement = function (key) {\n      _this.state.canvas.remove(_this.state.canvas.getActiveObject());\n    };\n\n    _this.onChangeColor = function (e) {\n      if (_this.state.canvas.getActiveObject()) {\n        _this.setState({\n          selectedColor: e.target.value\n        });\n\n        _this.state.canvas.getActiveObject().set(\"fill\", e.target.value);\n\n        _this.state.canvas.renderAll();\n      } else {\n        return alert(\"select Text\");\n      }\n    };\n\n    _this.onChangeBackGroundColor = function (e) {\n      _this.setState({\n        selectedBackGroundColor: e.target.value\n      }, function () {\n        _this.state.canvas.setBackgroundColor(_this.state.selectedBackGroundColor, function () {\n          _this.state.canvas.renderAll();\n        });\n      });\n    };\n\n    _this.onChangeFontSize = function (e) {\n      if (/^\\d*$/.test(e.target.value)) {\n        if (_this.state.canvas.getActiveObject()) {\n          _this.setState({\n            fontSize: e.target.value\n          });\n\n          _this.state.canvas.getActiveObject().set(\"fontSize\", e.target.value * 72 / 96);\n\n          _this.state.canvas.renderAll();\n        } else {\n          return alert(\"select Text\");\n        }\n      }\n    };\n\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(DragDrop, [{\n    key: \"componentDidMount\",\n    // onCopy = e => {\n    //   if (\n    //     this.state.canvas.getActiveObject() === undefined ||\n    //     this.state.canvas.getActiveObject() === null\n    //   ) {\n    //     return \"\";\n    //   }\n    //   this.state.canvas.getActiveObject().clone(cloned => {\n    //     this.setState({ cloneObject: cloned });\n    //   });\n    // };\n    // onPaste = e => {\n    //   let _cloneObject = this.state.cloneObject;\n    //   if (!_cloneObject) {\n    //     return \"\";\n    //   }\n    //   _cloneObject.clone(clonedObj => {\n    //     this.state.canvas.discardActiveObject();\n    //     clonedObj.set({\n    //       left: clonedObj.left + 10,\n    //       top: clonedObj.top + 10,\n    //       evented: true\n    //     });\n    //     if (clonedObj.type === \"activeSelection\") {\n    //       clonedObj.canvas = this.state.canvas;\n    //       clonedObj.forEachObject(function(obj) {\n    //         this.state.canvas.add(obj);\n    //       });\n    //       clonedObj.setCoords();\n    //       alert(\"activeSelection\");\n    //     } else {\n    //       this.state.canvas.add(clonedObj);\n    //     }\n    //     _cloneObject.top += 10;\n    //     _cloneObject.left += 10;\n    //     this.state.canvas.setActiveObject(clonedObj);\n    //     this.state.canvas.requestRenderAll();\n    //   });\n    // };\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var canvas = new fabric.Canvas(this.canvasRef.current, {\n        preserveObjectStacking: true,\n        uniScaleTransform: true\n      });\n      this.setState({\n        canvas: canvas\n      });\n      canvas.on(\"drop\", this.drawImage); // visibility show Text Entered\n\n      canvas.on(\"text:editing:entered\", function (e) {\n        _this2.setState({\n          textVisibility: true\n        });\n      }); // visibility hidden Text Entered\n\n      canvas.on(\"text:editing:exited\", function (e) {\n        _this2.setState({\n          textVisibility: false\n        });\n      }); // visibility show copy\n\n      canvas.on(\"object:selected\", function (e) {\n        _this2.setState({\n          copyPasteVisibility: true\n        });\n      }); // visibility hidden copy\n\n      canvas.on(\"selection:cleared\", function (e) {\n        _this2.setState({\n          copyPasteVisibility: false\n        });\n      });\n      document.addEventListener(\"keydown\", function (key) {\n        if (canvas.getActiveObject()) {\n          if (key.shiftKey && key.keyCode === 68) // 46 delete 68 D key.keyCode === 46 ||\n            //selected Object Delete\n            _this2.onRemoveElement();\n        }\n      });\n      this.props.onGetImageSrc();\n      this.props.onGetFontsList();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.state.canvas.off(\"drop\");\n      document.removeEventListener(\"keypress\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Images, {\n        imagesList: this.state.imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          padding: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"backGroundColor\",\n        type: \"color\",\n        value: this.state.selectedBackGroundColor,\n        onChange: this.onChangeBackGroundColor,\n        displayText: \"Background Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(DrawText, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(MultipleSelection, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this3.state.canvas.discardActiveObject() && _this3.state.canvas.requestRenderAll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Deselect\"))), React.createElement(Download, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: !this.state.copyPasteVisibility ? \"visibility\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Group, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(Ungroup, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Backward, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(Forward, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), React.createElement(RangeBarReact, {\n        canvas: this.state.canvas,\n        id: \"transparent\",\n        displayText: \"Transparent\",\n        rangeMin: 0,\n        rangeMax: 100,\n        rangeStep: 10,\n        value: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), React.createElement(CopyPaste, {\n        canvas: this.state.canvas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          padding: \"20px\"\n        },\n        className: !this.state.textVisibility ? \"visibility\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(FontFamily, {\n        selectedFontFamily: this.state.selectedFontFamily,\n        fonts: this.state.fontFamilys,\n        onChangeFontFamily: this.onChangeFontFamily,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(TextAlign, {\n        selectedTextAlign: this.state.selectedTextAlign,\n        onChangeTextAlign: this.onChangeTextAlign,\n        aligns: this.state.textAligns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(Input, {\n        id: \"fontColor\",\n        type: \"color\",\n        value: this.state.selectedColor,\n        onChange: this.onChangeColor,\n        displayText: \"Font Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(Input, {\n        id: \"fontSize\",\n        type: \"text\",\n        value: this.state.fontSize,\n        onChange: this.onChangeFontSize,\n        displayText: \"Font Size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(RangeBarReact, {\n        canvas: this.state.canvas,\n        id: \"lineHeight\",\n        displayText: \"Line Height\",\n        rangeMin: 0.5,\n        rangeMax: 2.5,\n        rangeStep: 0.2,\n        value: 1.16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), React.createElement(RangeBarReact, {\n        canvas: this.state.canvas,\n        id: \"letterSpacing\",\n        displayText: \"Letter Spacing\",\n        rangeMin: -200,\n        rangeMax: 800,\n        rangeStep: 1,\n        value: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(ButtonReact, {\n        id: \"bold\",\n        canvas: this.state.canvas,\n        displayText: \"B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), React.createElement(ButtonReact, {\n        id: \"underLine\",\n        canvas: this.state.canvas,\n        displayText: \"U\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }), React.createElement(ButtonReact, {\n        id: \"italic\",\n        canvas: this.state.canvas,\n        displayText: \"I\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }))), React.createElement(\"canvas\", {\n        ref: this.canvasRef,\n        height: \"500%\",\n        width: \"700%\",\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      })))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.imgSrcData.readyState === 4) {\n        return {\n          imgSrc: nextProps.imgSrcData.imgSrcList\n        };\n      } else if (nextProps.fontListData.readyState === 4) {\n        return {\n          fontFamilys: nextProps.fontListData.fontList\n        };\n      } else return null;\n    }\n  }]);\n\n  return DragDrop;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    imgSrcData: state.getImagesSrc,\n    fontListData: state.getFontList\n  };\n};\n\nvar mapDispatchToProps = {\n  onGetImageSrc: getImageSrc,\n  onGetFontsList: getFontsList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DragDrop); //Crop images","map":{"version":3,"sources":["/home/admin1/Documents/parct/fabric_pract/src/Component/DragDrop/DragDrop.jsx"],"names":["fabric","React","PureComponent","connect","getImageSrc","getFontsList","DrawText","Images","FontFamily","Input","TextAlign","Download","Group","Ungroup","MultipleSelection","Backward","Forward","RangeBarReact","ButtonReact","CopyPaste","Object","prototype","set","borderColor","cornerColor","cornerSize","padding","hasBorders","rotatingPointOffset","cornerStyle","DragDrop","props","state","canvas","cloneObject","imgSrc","fontFamilys","selectedColor","selectedBackGroundColor","selectedFontFamily","fontSize","copyPasteVisibility","textVisibility","selectedTextAlign","textAligns","drawImage","event","e","preventDefault","src","dataTransfer","getData","setData","Image","fromURL","img","left","top","scaleToHeight","scaleToWidth","setActiveObject","add","renderAll","onChangeFontFamily","getActiveObject","setState","target","value","alert","onChangeTextAlign","onRemoveElement","key","remove","onChangeColor","onChangeBackGroundColor","setBackgroundColor","onChangeFontSize","test","canvasRef","createRef","Canvas","current","preserveObjectStacking","uniScaleTransform","on","document","addEventListener","shiftKey","keyCode","onGetImageSrc","onGetFontsList","off","removeEventListener","display","justifyContent","discardActiveObject","requestRenderAll","nextProps","prevState","imgSrcData","readyState","imgSrcList","fontListData","fontList","mapStateToProps","getImagesSrc","getFontList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import \"./DragDrop.css\";\nimport { fabric } from \"fabric\";\nimport React, { PureComponent } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getImageSrc } from \"../../actions/FetchImages/FetchImage\";\nimport { getFontsList } from \"../../actions/FetchFontFamily/FetchFontFamily\";\n\nimport {\n  DrawText,\n  Images,\n  FontFamily,\n  Input,\n  TextAlign,\n  Download,\n  Group,\n  Ungroup,\n  MultipleSelection,\n  Backward,\n  Forward,\n  RangeBarReact,\n  ButtonReact,\n  CopyPaste\n} from \"../Import/ImportModules\";\n\nfabric.Object.prototype.set({\n  borderColor: \"#53c5bf\",\n  cornerColor: \"#acdab5b8\",\n  cornerSize: 10,\n  padding: 1,\n  hasBorders: true,\n  rotatingPointOffset: 20,\n  cornerStyle: \"circle\"\n  // transparentCorners: true\n});\n\nclass DragDrop extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  state = {\n    canvas: \"\",\n    cloneObject: \"\",\n    imgSrc: [],\n    fontFamilys: [],\n    selectedColor: \"#000000\",\n    selectedBackGroundColor: \"#77a05f\",\n    selectedFontFamily: \"Helvetica Neue\",\n    fontSize: 30,\n    copyPasteVisibility: false,\n    textVisibility: false,\n    selectedTextAlign: \"\",\n    textAligns: [\"left\", \"right\", \"center\", \"justify\"]\n  };\n\n  drawImage = event => {\n    event.e.preventDefault();\n    let src = event.e.dataTransfer.getData(\"imageSrc\");\n    event.e.dataTransfer.setData(\"imageSrc\", \"hello\");\n    fabric.Image.fromURL(src, img => {\n      img.set({\n        left: 10,\n        top: 0\n\n        // border: \"#000\",\n        // stroke: \"#F0F0F0\",\n        // strokeWidth: 5\n      });\n      img.scaleToHeight(500);\n      img.scaleToWidth(500);\n      this.state.canvas.setActiveObject(img);\n      this.state.canvas.add(img).renderAll();\n    });\n  };\n\n  onChangeFontFamily = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedFontFamily: e.target.value });\n      this.state.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeTextAlign = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedTextAlign: e.target.value });\n      this.state.canvas.getActiveObject().set(\"textAlign\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onRemoveElement = key => {\n    this.state.canvas.remove(this.state.canvas.getActiveObject());\n  };\n\n  onChangeColor = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedColor: e.target.value });\n      this.state.canvas.getActiveObject().set(\"fill\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeBackGroundColor = e => {\n    this.setState({ selectedBackGroundColor: e.target.value }, () => {\n      this.state.canvas.setBackgroundColor(\n        this.state.selectedBackGroundColor,\n        () => {\n          this.state.canvas.renderAll();\n        }\n      );\n    });\n  };\n\n  onChangeFontSize = e => {\n    if (/^\\d*$/.test(e.target.value)) {\n      if (this.state.canvas.getActiveObject()) {\n        this.setState({ fontSize: e.target.value });\n        this.state.canvas\n          .getActiveObject()\n          .set(\"fontSize\", (e.target.value * 72) / 96);\n        this.state.canvas.renderAll();\n      } else {\n        return alert(\"select Text\");\n      }\n    }\n  };\n\n  // onCopy = e => {\n  //   if (\n  //     this.state.canvas.getActiveObject() === undefined ||\n  //     this.state.canvas.getActiveObject() === null\n  //   ) {\n  //     return \"\";\n  //   }\n  //   this.state.canvas.getActiveObject().clone(cloned => {\n  //     this.setState({ cloneObject: cloned });\n  //   });\n  // };\n\n  // onPaste = e => {\n  //   let _cloneObject = this.state.cloneObject;\n  //   if (!_cloneObject) {\n  //     return \"\";\n  //   }\n  //   _cloneObject.clone(clonedObj => {\n  //     this.state.canvas.discardActiveObject();\n  //     clonedObj.set({\n  //       left: clonedObj.left + 10,\n  //       top: clonedObj.top + 10,\n  //       evented: true\n  //     });\n  //     if (clonedObj.type === \"activeSelection\") {\n  //       clonedObj.canvas = this.state.canvas;\n  //       clonedObj.forEachObject(function(obj) {\n  //         this.state.canvas.add(obj);\n  //       });\n  //       clonedObj.setCoords();\n  //       alert(\"activeSelection\");\n  //     } else {\n  //       this.state.canvas.add(clonedObj);\n  //     }\n  //     _cloneObject.top += 10;\n  //     _cloneObject.left += 10;\n  //     this.state.canvas.setActiveObject(clonedObj);\n  //     this.state.canvas.requestRenderAll();\n  //   });\n  // };\n\n  componentDidMount() {\n    let canvas = new fabric.Canvas(this.canvasRef.current, {\n      preserveObjectStacking: true,\n      uniScaleTransform: true\n    });\n    this.setState({ canvas: canvas });\n\n    canvas.on(\"drop\", this.drawImage);\n\n    // visibility show Text Entered\n    canvas.on(\"text:editing:entered\", e => {\n      this.setState({ textVisibility: true });\n    });\n\n    // visibility hidden Text Entered\n    canvas.on(\"text:editing:exited\", e => {\n      this.setState({ textVisibility: false });\n    });\n\n    // visibility show copy\n    canvas.on(\"object:selected\", e => {\n      this.setState({ copyPasteVisibility: true });\n    });\n    // visibility hidden copy\n    canvas.on(\"selection:cleared\", e => {\n      this.setState({ copyPasteVisibility: false });\n    });\n\n    document.addEventListener(\"keydown\", key => {\n      if (canvas.getActiveObject()) {\n        if (key.shiftKey && key.keyCode === 68)\n          // 46 delete 68 D key.keyCode === 46 ||\n          //selected Object Delete\n          this.onRemoveElement();\n      }\n    });\n    this.props.onGetImageSrc();\n    this.props.onGetFontsList();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.imgSrcData.readyState === 4) {\n      return { imgSrc: nextProps.imgSrcData.imgSrcList };\n    } else if (nextProps.fontListData.readyState === 4) {\n      return { fontFamilys: nextProps.fontListData.fontList };\n    } else return null;\n  }\n\n  componentWillUnmount() {\n    this.state.canvas.off(\"drop\");\n    document.removeEventListener(\"keypress\");\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"left\">\n            <Images imagesList={this.state.imgSrc} />\n          </div>\n\n          <div className=\"right\">\n            <div>\n              <div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    padding: \"20px\"\n                  }}\n                >\n                  <Input\n                    id=\"backGroundColor\"\n                    type=\"color\"\n                    value={this.state.selectedBackGroundColor}\n                    onChange={this.onChangeBackGroundColor}\n                    displayText=\"Background Color\"\n                  />\n                  <DrawText canvas={this.state.canvas} />\n                  <div style={{ display: \"flex\" }}>\n                    <MultipleSelection canvas={this.state.canvas} />\n                    <div>\n                      <button\n                        onClick={e =>\n                          this.state.canvas.discardActiveObject() &&\n                          this.state.canvas.requestRenderAll()\n                        }\n                      >\n                        Deselect\n                      </button>\n                    </div>\n                  </div>\n                  <Download canvas={this.state.canvas} />\n                  <div\n                    style={{\n                      display: \"flex\"\n                    }}\n                    className={\n                      !this.state.copyPasteVisibility ? \"visibility\" : \"\"\n                    }\n                  >\n                    <div style={{ display: \"flex\" }}>\n                      <Group canvas={this.state.canvas} />\n                      <Ungroup canvas={this.state.canvas} />\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                      <Backward canvas={this.state.canvas} />\n                      <Forward canvas={this.state.canvas} />\n                    </div>\n                    <RangeBarReact\n                      canvas={this.state.canvas}\n                      id=\"transparent\"\n                      displayText=\"Transparent\"\n                      rangeMin={0}\n                      rangeMax={100}\n                      rangeStep={10}\n                      value={100}\n                    />\n                    <CopyPaste canvas={this.state.canvas} />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    padding: \"20px\"\n                  }}\n                  className={!this.state.textVisibility ? \"visibility\" : \"\"}\n                >\n                  <FontFamily\n                    selectedFontFamily={this.state.selectedFontFamily}\n                    fonts={this.state.fontFamilys}\n                    onChangeFontFamily={this.onChangeFontFamily}\n                  />\n                  <TextAlign\n                    selectedTextAlign={this.state.selectedTextAlign}\n                    onChangeTextAlign={this.onChangeTextAlign}\n                    aligns={this.state.textAligns}\n                  />\n                  <Input\n                    id=\"fontColor\"\n                    type=\"color\"\n                    value={this.state.selectedColor}\n                    onChange={this.onChangeColor}\n                    displayText=\"Font Color\"\n                  />\n                  <Input\n                    id=\"fontSize\"\n                    type=\"text\"\n                    value={this.state.fontSize}\n                    onChange={this.onChangeFontSize}\n                    displayText=\"Font Size\"\n                  />\n                  <RangeBarReact\n                    canvas={this.state.canvas}\n                    id=\"lineHeight\"\n                    displayText=\"Line Height\"\n                    rangeMin={0.5}\n                    rangeMax={2.5}\n                    rangeStep={0.2}\n                    value={1.16}\n                  />\n\n                  <RangeBarReact\n                    canvas={this.state.canvas}\n                    id=\"letterSpacing\"\n                    displayText=\"Letter Spacing\"\n                    rangeMin={-200}\n                    rangeMax={800}\n                    rangeStep={1}\n                    value={10}\n                  />\n                  <ButtonReact\n                    id=\"bold\"\n                    canvas={this.state.canvas}\n                    displayText={\"B\"}\n                  />\n                  <ButtonReact\n                    id=\"underLine\"\n                    canvas={this.state.canvas}\n                    displayText={\"U\"}\n                  />\n                  <ButtonReact\n                    id=\"italic\"\n                    canvas={this.state.canvas}\n                    displayText={\"I\"}\n                  />\n                </div>\n              </div>\n              <canvas\n                ref={this.canvasRef}\n                height=\"500%\"\n                width=\"700%\"\n                className=\"canvas\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { imgSrcData: state.getImagesSrc, fontListData: state.getFontList };\n};\n\nconst mapDispatchToProps = {\n  onGetImageSrc: getImageSrc,\n  onGetFontsList: getFontsList\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DragDrop);\n\n//Crop images\n"]},"metadata":{},"sourceType":"module"}