{"version":3,"sources":["actions/FetchImages/FetchImage.jsx","actions/FetchFontFamily/FetchFontFamily.jsx","Component/DrawText/DrawText.jsx","Component/Image/Images.jsx","Component/Fonts/FontFamily/FontsFamily.jsx","Component/Input/Input.jsx","Component/Fonts/TextAlign/TextAlign.jsx","Component/Download/Download.jsx","Component/GroupUngroup/Group.jsx","Component/GroupUngroup/Ungroup.jsx","Component/MultipleSelection/MultipleSelection.jsx","Component/Position/Backward/Backward.jsx","Component/Position/Forward/Forward.jsx","Component/RangeBarReact/RangeBarReact.jsx","Component/ButtonReact/ButtonReact.jsx","Component/DragDrop/DragDrop.jsx","App.js","store.jsx","reducers/FetchImages/FetchImage.jsx","reducers/FetchFontFamily/FetchFontFamily.jsx","serviceWorker.js","index.js"],"names":["loading","getImages","getFont","memo","props","react_default","a","createElement","onClick","text","fabric","Textbox","left","top","width","height","fontFamily","fill","stroke","fontSize","strokeWidth","setControlsVisibility","mt","mb","canvas","add","renderAll","src","onDragStart","className","draggable","concat","alt","selectedFontFamily","onChangeFontFamily","fonts","htmlFor","id","name","value","onChange","map","fontName","ind","key","alert","type","displayText","selectedTextAlign","onChangeTextAlign","aligns","e","document","href","toDataURL","format","quality","multiplier","download","click","getActiveObject","toGroup","toActiveSelection","discardActiveObject","sel","ActiveSelection","getObjects","setActiveObject","sendToBack","bringForward","RangeBarReact","state","_this","target","onChangeLetterSpacing","onChangeLineHeight","onChangeTransparent","setState","set","String","substr","this","min","rangeMin","max","rangeMax","step","rangeStep","Component","onClickBold","fontWeight","onClickUnderLine","underline","onClickItalic","fontStyle","Object","prototype","borderColor","cornerColor","cornerSize","padding","hasBorders","rotatingPointOffset","cornerStyle","DragDrop","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedImg","selectedColor","selectedBackGroundColor","copyPasteVisibility","textVisibility","fontFamilys","textAligns","imgSrc","cloneObject","event","drawImage","Image","fromURL","img","scaleToHeight","scaleToWidth","onRemoveElement","remove","onChangeColor","onChangeBackGroundColor","setBackgroundColor","onChangeFontSize","test","onCopy","undefined","clone","cloned","onPaste","_cloneObject","clonedObj","evented","forEachObject","obj","setCoords","requestRenderAll","canvasRef","React","createRef","_this2","Canvas","current","preserveObjectStacking","uniScaleTransform","on","addEventListener","shiftKey","keyCode","ctrlKey","onGetImageSrc","onGetFontsList","off","removeEventListener","_this3","Image_Images","style","display","justifyContent","Input_Input","DrawText_DrawText","MultipleSelection_MultipleSelection","Download_Download","GroupUngroup_Group","GroupUngroup_Ungroup","Backward_Backward","Forward_Forward","RangeBarReact_RangeBarReact","FontsFamily","TextAlign_TextAlign","ButtonReact_ButtonReact","ref","nextProps","prevState","imgSrcData","readyState","imgSrcList","fontListData","fontList","PureComponent","mapDispatchToProps","dispatch","payload","setTimeout","connect","getImagesSrc","getFontList","App","Component_DragDrop_DragDrop","reducer","combineReducers","arguments","length","action","store","createStore","compose","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bc4846b.chunk.js","sourcesContent":["export let loading = \"lading\";\nexport let getImages = \"getImages\";\nexport function getImageSrc() {\n  let imgSrc = [\n    \"1.jpg\",\n    \"2.jpg\",\n    \"3.jpg\",\n    \"4.jpg\",\n    \"5.png\",\n    \"6.jpg\",\n    \"7.jpg\",\n    \"8.jpg\",\n    \"9.jpg\",\n    \"10.png\",\n    \"11.jpg\",\n    \"12.jpg\",\n    \"13.jpg\",\n    \"14.jpg\"\n  ];\n  return dispatch => {\n    dispatch({ type: loading, payload: [] });\n    setTimeout(() => {\n      dispatch({ type: getImages, payload: imgSrc });\n    }, 1000);\n  };\n}\n","export let loading = \"loading\";\nexport let getFont = \"getFont\";\nexport function getFontsList() {\n  let fonts = [\n    \"arial\",\n    \"monaco\",\n    \"hoefler text\",\n    \"optima\",\n    \"plaster\",\n    \"engagement\",\n    \"VT323\",\n    \"Helvetica Neue\",\n    \"myriad pro\",\n    \"comic sans ms\",\n    \"delicious\",\n    \"verdana\",\n    \"georgia\",\n    \"courier\",\n    \"impact\"\n  ];\n  return dispatch => {\n    dispatch({ type: loading, payload: [] });\n    setTimeout(() => {\n      dispatch({ type: getFont, payload: fonts });\n    }, 10);\n  };\n}\n","import React, { memo } from \"react\";\nimport { fabric } from \"fabric\";\n\nexport default memo(function DrawText(props) {\n  let drawText = () => {\n    let text = new fabric.Textbox(\"type text\", {\n      left: 50,\n      top: 20,\n      width: 80,\n      height: 200,\n      fontFamily: \"helvetica neue\",\n      fill: \"black\",\n      stroke: \"#fff\",\n      fontSize: (30 * 72) / 96,\n      strokeWidth: 0\n    });\n\n    text.setControlsVisibility({\n      mt: false,\n      mb: false\n    });\n    props.canvas.add(text);\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={drawText}>Add Text</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Images(props) {\n  let { src, onDragStart } = props;\n  return (\n    <div className=\"content\">\n      <img\n        draggable\n        src={`/assets/image/${src}`}\n        alt={`alt ${src}`}\n        onDragStart={onDragStart}\n      />\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function FontFamily(props) {\n  let { selectedFontFamily, onChangeFontFamily, fonts } = props;\n  if (!(onChangeFontFamily && fonts)) {\n    alert(\"fill all details--> onChangeFontFamily && fonts\");\n\n    return <div>fill all details--> onChangeFontFamily && fonts</div>;\n  }\n  return (\n    <div>\n      <label htmlFor=\"fontFamily\">Font Family : </label>\n      <select\n        id=\"fontFamily\"\n        name=\"font-family\"\n        value={selectedFontFamily}\n        onChange={onChangeFontFamily}\n      >\n        {fonts.map((fontName, ind) => (\n          <option key={`${ind}`} value={`${fontName}`}>{`${fontName}`}</option>\n        ))}\n      </select>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Input(props) {\n  let { id, type, value, onChange, displayText } = props;\n  if (!(id && type && onChange && displayText)) {\n    alert(\"fill all details--> id, type, value, onChangeFontSize, displayText\");\n    return (\n      <div>\n        fill all details--> id, type, value, onChangeFontSize, displayText\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <label htmlFor={id}>{displayText} : </label>\n      <input\n        id={id}\n        type={type}\n        value={value}\n        onChange={onChange}\n        // style={{ width: \"40px\" }}\n      />\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function TextAlign(props) {\n  let { selectedTextAlign, onChangeTextAlign, aligns } = props;\n  if (!(onChangeTextAlign && aligns)) {\n    alert(\"fill all details--> onChangeTextAlign,aligns \");\n\n    return <div>fill all details--> onChangeTextAlign,aligns </div>;\n  }\n  return (\n    <div>\n      <label htmlFor=\"textAlign\">Text Align : </label>\n      <select\n        id=\"textAlign\"\n        name=\"Text-Align\"\n        value={selectedTextAlign}\n        onChange={onChangeTextAlign}\n      >\n        {aligns.map((fontName, ind) => (\n          <option key={`${ind}`} value={`${fontName}`}>{`${fontName}`}</option>\n        ))}\n      </select>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Download(props) {\n  let onDownloadImage = e => {\n    let a = document.createElement(\"a\");\n    a.href = props.canvas.toDataURL({\n      format: \"png\",\n      quality: 1.0,\n      multiplier: 1.0\n    });\n    a.download = \"custom.png\";\n    a.click();\n  };\n\n  return (\n    <div>\n      <button onClick={onDownloadImage}>download Image</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Group(props) {\n  let onGroup = e => {\n    if (\n      !props.canvas.getActiveObject() ||\n      props.canvas.getActiveObject().type !== \"activeSelection\"\n    ) {\n      return \"\";\n    }\n    props.canvas.getActiveObject().toGroup();\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={onGroup}>Group</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Ungroup(props) {\n  let onUnGroup = e => {\n    if (!props.canvas.getActiveObject()) {\n      return;\n    }\n    if (props.canvas.getActiveObject().type !== \"group\") {\n      return;\n    }\n    props.canvas.getActiveObject().toActiveSelection();\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={onUnGroup}>UnGroup</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\nimport { fabric } from \"fabric\";\n\nexport default memo(function MultipleSelection(props) {\n  let onMultipleSelection = e => {\n    props.canvas.discardActiveObject();\n    var sel = new fabric.ActiveSelection(props.canvas.getObjects(), {\n      canvas: props.canvas\n    });\n    props.canvas.setActiveObject(sel);\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={onMultipleSelection}>Multiple Selection</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Backward(props) {\n  let selectedObjectBackward = e => {\n    if (!props.canvas.getActiveObject()) return \"\";\n    props.canvas.sendToBack(props.canvas.getActiveObject());\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={selectedObjectBackward}>Backward</button>\n    </div>\n  );\n});\n","import React, { memo } from \"react\";\n\nexport default memo(function Forward(props) {\n  let selectedObjectForward = e => {\n    if (!props.canvas.getActiveObject()) return \"\";\n    props.canvas.bringForward(props.canvas.getActiveObject());\n    props.canvas.renderAll();\n  };\n\n  return (\n    <div>\n      <button onClick={selectedObjectForward}>forward</button>\n    </div>\n  );\n});\n","import React, { Component } from \"react\";\n\nexport default class RangeBarReact extends Component {\n  state = { value: this.props.value };\n  onChange = e => {\n    if (e.target.id === \"letterSpacing\") {\n      this.onChangeLetterSpacing(e);\n    } else if (e.target.id === \"lineHeight\") {\n      this.onChangeLineHeight(e);\n    } else if (e.target.id === \"transparent\") {\n      this.onChangeTransparent(e);\n    }\n  };\n\n  onChangeLetterSpacing = e => {\n    if (this.props.canvas.getActiveObject()) {\n      this.setState({ value: e.target.value });\n      this.props.canvas.getActiveObject().set(\"charSpacing\", e.target.value);\n\n      this.props.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeLineHeight = e => {\n    if (this.props.canvas.getActiveObject()) {\n      this.setState({ value: e.target.value });\n      this.props.canvas.getActiveObject().set(\"lineHeight\", e.target.value);\n      this.props.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeTransparent = e => {\n    if (this.props.canvas.getActiveObject()) {\n      this.setState({ value: e.target.value });\n      this.props.canvas\n        .getActiveObject()\n        .set(\"opacity\", String(e.target.value * 0.01).substr(0, 4));\n      this.props.canvas.renderAll();\n    } else {\n      return alert(\"select object\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <label htmlFor={this.props.id}>{this.props.displayText} : </label>\n          <input\n            id={this.props.id}\n            type=\"range\"\n            value={this.state.value}\n            onChange={this.onChange}\n            min={this.props.rangeMin}\n            max={this.props.rangeMax}\n            step={this.props.rangeStep}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { memo } from \"react\";\n\nexport default memo(function ButtonReact(props) {\n  let onClick = e => {\n    if (e.target.id === \"bold\") onClickBold(e);\n    else if (e.target.id === \"underLine\") onClickUnderLine(e);\n    else if (e.target.id === \"italic\") onClickItalic(e);\n  };\n\n  let onClickBold = e => {\n    if (props.canvas.getActiveObject().fontWeight === \"normal\") {\n      props.canvas.getActiveObject().set(\"fontWeight\", \"bold\");\n      props.canvas.renderAll();\n    } else if (props.canvas.getActiveObject().fontWeight === \"bold\") {\n      props.canvas.getActiveObject().set(\"fontWeight\", \"normal\");\n      props.canvas.renderAll();\n    }\n  };\n  let onClickUnderLine = e => {\n    if (!props.canvas.getActiveObject().underline) {\n      props.canvas.getActiveObject().set(\"underline\", true);\n      props.canvas.renderAll();\n    } else {\n      props.canvas.getActiveObject().set(\"underline\", false);\n      props.canvas.renderAll();\n    }\n  };\n\n  let onClickItalic = e => {\n    if (props.canvas.getActiveObject().fontStyle === \"normal\") {\n      props.canvas.getActiveObject().set(\"fontStyle\", \"italic\");\n      props.canvas.renderAll();\n    } else {\n      props.canvas.getActiveObject().set(\"fontStyle\", \"normal\");\n      props.canvas.renderAll();\n    }\n  };\n\n  return (\n    <div>\n      <button id={props.id} onClick={onClick}>\n        {props.displayText}\n      </button>\n    </div>\n  );\n});\n","import \"./DragDrop.css\";\nimport { fabric } from \"fabric\";\nimport React, { PureComponent } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getImageSrc } from \"../../actions/FetchImages/FetchImage\";\nimport { getFontsList } from \"../../actions/FetchFontFamily/FetchFontFamily\";\n\nimport {\n  DrawText,\n  Images,\n  FontFamily,\n  Input,\n  TextAlign,\n  Download,\n  Group,\n  Ungroup,\n  MultipleSelection,\n  Backward,\n  Forward,\n  RangeBarReact,\n  ButtonReact\n} from \"../Import/ImportModules\";\n\nfabric.Object.prototype.set({\n  borderColor: \"#53c5bf\",\n  cornerColor: \"#acdab5b8\",\n  cornerSize: 10,\n  padding: 1,\n  hasBorders: true,\n  rotatingPointOffset: 20,\n  cornerStyle: \"circle\"\n  // transparentCorners: true\n});\n\nclass DragDrop extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  state = {\n    canvas: \"\",\n    selectedImg: \"\",\n    selectedColor: \"#000000\",\n    selectedBackGroundColor: \"#77a05f\",\n    selectedFontFamily: \"Helvetica Neue\",\n    fontSize: 30,\n    copyPasteVisibility: false,\n    textVisibility: false,\n    selectedTextAlign: \"\",\n    fontFamilys: [],\n    textAligns: [\"left\", \"right\", \"center\", \"justify\"],\n    imgSrc: [],\n    cloneObject: \"\"\n  };\n\n  onDragStart = event => {\n    this.setState({ selectedImg: event.target });\n  };\n\n  drawImage = () => {\n    fabric.Image.fromURL(this.state.selectedImg.src, img => {\n      img.set({\n        left: 0,\n        top: 0\n\n        // border: \"#000\",\n        // stroke: \"#F0F0F0\",\n        // strokeWidth: 5\n      });\n      img.scaleToHeight(500);\n      img.scaleToWidth(500);\n      this.state.canvas.add(img).renderAll();\n    });\n  };\n\n  onChangeFontFamily = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedFontFamily: e.target.value });\n      this.state.canvas.getActiveObject().set(\"fontFamily\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeTextAlign = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedTextAlign: e.target.value });\n      this.state.canvas.getActiveObject().set(\"textAlign\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onRemoveElement = key => {\n    this.state.canvas.remove(this.state.canvas.getActiveObject());\n  };\n\n  onChangeColor = e => {\n    if (this.state.canvas.getActiveObject()) {\n      this.setState({ selectedColor: e.target.value });\n      this.state.canvas.getActiveObject().set(\"fill\", e.target.value);\n      this.state.canvas.renderAll();\n    } else {\n      return alert(\"select Text\");\n    }\n  };\n\n  onChangeBackGroundColor = e => {\n    this.setState({ selectedBackGroundColor: e.target.value }, () => {\n      this.state.canvas.setBackgroundColor(\n        this.state.selectedBackGroundColor,\n        () => {\n          this.state.canvas.renderAll();\n        }\n      );\n    });\n  };\n\n  onChangeFontSize = e => {\n    if (/^\\d*$/.test(e.target.value)) {\n      if (this.state.canvas.getActiveObject()) {\n        this.setState({ fontSize: e.target.value });\n        this.state.canvas\n          .getActiveObject()\n          .set(\"fontSize\", (e.target.value * 72) / 96);\n        this.state.canvas.renderAll();\n      } else {\n        return alert(\"select Text\");\n      }\n    }\n  };\n\n  onCopy = e => {\n    if (\n      this.state.canvas.getActiveObject() === undefined ||\n      this.state.canvas.getActiveObject() === null\n    ) {\n      return \"\";\n    }\n    this.state.canvas.getActiveObject().clone(cloned => {\n      this.setState({ cloneObject: cloned });\n    });\n  };\n\n  onPaste = e => {\n    let _cloneObject = this.state.cloneObject;\n    if (\n      _cloneObject === \"\" ||\n      _cloneObject === null ||\n      _cloneObject === undefined\n    ) {\n      return \"\";\n    }\n    _cloneObject.clone(clonedObj => {\n      this.state.canvas.discardActiveObject();\n      clonedObj.set({\n        left: clonedObj.left + 10,\n        top: clonedObj.top + 10,\n        evented: true\n      });\n      if (clonedObj.type === \"activeSelection\") {\n        clonedObj.canvas = this.state.canvas;\n        clonedObj.forEachObject(function(obj) {\n          this.state.canvas.add(obj);\n        });\n        clonedObj.setCoords();\n        alert(\"activeSelection\");\n      } else {\n        this.state.canvas.add(clonedObj);\n      }\n      _cloneObject.top += 10;\n      _cloneObject.left += 10;\n      this.state.canvas.setActiveObject(clonedObj);\n      this.state.canvas.requestRenderAll();\n    });\n  };\n\n  componentDidMount() {\n    let canvas = new fabric.Canvas(this.canvasRef.current, {\n      preserveObjectStacking: true,\n      uniScaleTransform: true\n    });\n    this.setState({ canvas: canvas });\n\n    canvas.on(\"drop\", this.drawImage);\n\n    // visibility show Text Entered\n    canvas.on(\"text:editing:entered\", e => {\n      this.setState({ textVisibility: true });\n    });\n\n    // visibility hidden Text Entered\n    canvas.on(\"text:editing:exited\", e => {\n      this.setState({ textVisibility: false });\n    });\n\n    // visibility show copy\n    canvas.on(\"object:selected\", e => {\n      this.setState({ copyPasteVisibility: true });\n    });\n    // visibility hidden copy\n    canvas.on(\"selection:cleared\", e => {\n      this.setState({ copyPasteVisibility: false });\n    });\n\n    document.addEventListener(\"keydown\", key => {\n      if (canvas.getActiveObject()) {\n        if (key.shiftKey && key.keyCode === 68)\n          // 46 delete 68 D key.keyCode === 46 ||\n          //selected Object Delete\n          this.onRemoveElement();\n        if ((key.ctrlKey || key.keyCode === 17) && key.keyCode === 86)\n          // 17 ctrl 86 V\n          //selected Object Paste\n          this.onPaste();\n        if ((key.ctrlKey || key.keyCode === 17) && key.keyCode === 67)\n          // 17 ctrl 86 C\n          //selected Object Copy\n          this.onCopy();\n      }\n    });\n    this.props.onGetImageSrc();\n    this.props.onGetFontsList();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.imgSrcData.readyState === 4) {\n      return { imgSrc: nextProps.imgSrcData.imgSrcList };\n    } else if (nextProps.fontListData.readyState === 4) {\n      return { fontFamilys: nextProps.fontListData.fontList };\n    } else return null;\n  }\n\n  componentWillUnmount() {\n    this.state.canvas.off(\"drop\");\n    document.removeEventListener(\"keypress\");\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"left\">\n            {this.state.imgSrc.map((src, ind) => (\n              <Images src={src} key={ind} onDragStart={this.onDragStart} />\n            ))}\n          </div>\n\n          <div className=\"right\">\n            <div>\n              <div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    padding: \"20px\"\n                  }}\n                >\n                  <Input\n                    id=\"backGroundColor\"\n                    type=\"color\"\n                    value={this.state.selectedBackGroundColor}\n                    onChange={this.onChangeBackGroundColor}\n                    displayText=\"Background Color\"\n                  />\n                  <DrawText canvas={this.state.canvas} />\n                  <div style={{ display: \"flex\" }}>\n                    <MultipleSelection canvas={this.state.canvas} />\n                    <div>\n                      <button\n                        onClick={e =>\n                          this.state.canvas.discardActiveObject() &&\n                          this.state.canvas.requestRenderAll()\n                        }\n                      >\n                        Deselect\n                      </button>\n                    </div>\n                  </div>\n                  <Download canvas={this.state.canvas} />\n                  <div\n                    style={{\n                      display: \"flex\"\n                    }}\n                    className={\n                      !this.state.copyPasteVisibility ? \"visibility\" : \"\"\n                    }\n                  >\n                    <div style={{ display: \"flex\" }}>\n                      <Group canvas={this.state.canvas} />\n                      <Ungroup canvas={this.state.canvas} />\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                      <Backward canvas={this.state.canvas} />\n                      <Forward canvas={this.state.canvas} />\n                    </div>\n                    <RangeBarReact\n                      canvas={this.state.canvas}\n                      id=\"transparent\"\n                      displayText=\"Transparent\"\n                      rangeMin={0}\n                      rangeMax={100}\n                      rangeStep={10}\n                      value={100}\n                    />\n                    <div>\n                      <button onClick={this.onCopy}>Copy</button>\n                    </div>\n                    <div>\n                      <button onClick={this.onPaste}>Paste</button>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    padding: \"20px\"\n                  }}\n                  className={!this.state.textVisibility ? \"visibility\" : \"\"}\n                >\n                  <FontFamily\n                    selectedFontFamily={this.state.selectedFontFamily}\n                    fonts={this.state.fontFamilys}\n                    onChangeFontFamily={this.onChangeFontFamily}\n                  />\n                  <TextAlign\n                    selectedTextAlign={this.state.selectedTextAlign}\n                    onChangeTextAlign={this.onChangeTextAlign}\n                    aligns={this.state.textAligns}\n                  />\n\n                  <Input\n                    id=\"fontColor\"\n                    type=\"color\"\n                    value={this.state.selectedColor}\n                    onChange={this.onChangeColor}\n                    displayText=\"Font Color\"\n                  />\n                  <Input\n                    id=\"fontSize\"\n                    type=\"text\"\n                    value={this.state.fontSize}\n                    onChange={this.onChangeFontSize}\n                    displayText=\"Font Size\"\n                  />\n\n                  <RangeBarReact\n                    canvas={this.state.canvas}\n                    id=\"lineHeight\"\n                    displayText=\"Line Height\"\n                    rangeMin={0.5}\n                    rangeMax={2.5}\n                    rangeStep={0.2}\n                    value={1.16}\n                  />\n\n                  <RangeBarReact\n                    canvas={this.state.canvas}\n                    id=\"letterSpacing\"\n                    displayText=\"Letter Spacing\"\n                    rangeMin={-200}\n                    rangeMax={800}\n                    rangeStep={1}\n                    value={10}\n                  />\n                  <ButtonReact\n                    id=\"bold\"\n                    canvas={this.state.canvas}\n                    displayText={\"B\"}\n                  />\n                  <ButtonReact\n                    id=\"underLine\"\n                    canvas={this.state.canvas}\n                    displayText={\"U\"}\n                  />\n                  <ButtonReact\n                    id=\"italic\"\n                    canvas={this.state.canvas}\n                    displayText={\"I\"}\n                  />\n                </div>\n              </div>\n              <canvas\n                ref={this.canvasRef}\n                height=\"500%\"\n                width=\"700%\"\n                className=\"canvas\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { imgSrcData: state.getImagesSrc, fontListData: state.getFontList };\n};\n\nconst mapDispatchToProps = {\n  onGetImageSrc: getImageSrc,\n  onGetFontsList: getFontsList\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DragDrop);\n\n//Crop images\n","import React, { Component } from 'react';\nimport DragDrop from './Component/DragDrop/DragDrop';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <DragDrop />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport getImagesSrc from \"./reducers/FetchImages/FetchImage\";\nimport getFontsList from \"./reducers/FetchFontFamily/FetchFontFamily\";\n\nlet reducer = combineReducers({\n  getImagesSrc: getImagesSrc,\n  getFontList: getFontsList\n});\n\nlet reducerState = { getImagesSrc: [], getFontList: [] };\n\nlet store = createStore(reducer, reducerState, compose(applyMiddleware(thunk)));\n\nexport default store;\n","import { loading, getImages } from \"../../actions/FetchImages/FetchImage\";\nexport default function getImagesSrc(state = [], action) {\n  switch (action.type) {\n    case loading:\n      return { imgSrcList: action.payload, readyState: 1 };\n    case getImages:\n      return { imgSrcList: action.payload, readyState: 4 };\n    default:\n      return state;\n  }\n}\n","import {\n  loading,\n  getFont\n} from \"../../actions/FetchFontFamily/FetchFontFamily\";\n\nexport default function getFontsList(state = [], action) {\n  switch (action.type) {\n    case loading:\n      return { fontList: action.payload, readyState: 1 };\n    case getFont:\n      return { fontList: action.payload, readyState: 4 };\n\n    default:\n      return state;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}